// <auto-generated />
using System;
using Estoque.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Estoque.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Estoque.Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("char(14)");

                    b.HasKey("Id");

                    b.ToTable("Cidade", (string)null);
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Entrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Frete")
                        .HasColumnType("numeric(38,2)");

                    b.Property<int>("IdTransportadora")
                        .HasColumnType("int");

                    b.Property<decimal>("Imposto")
                        .HasColumnType("numeric(38,2)");

                    b.Property<int>("NumeroNotaFiscal")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(38,2)");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("IdTransportadora");

                    b.ToTable("Entrada", (string)null);
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("char(9)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("char(18)");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("IdCidade")
                        .HasColumnType("int");

                    b.Property<string>("Inscricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCidade");

                    b.ToTable("Fornecedor", (string)null);
                });

            modelBuilder.Entity("Estoque.Domain.Entities.ItemEntrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEntrada")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric(38,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdEntrada");

                    b.HasIndex("IdProduto");

                    b.ToTable("ItemEntrada", (string)null);
                });

            modelBuilder.Entity("Estoque.Domain.Entities.ItemSaida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int>("IdSaida")
                        .HasColumnType("int");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric(38,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto");

                    b.HasIndex("IdSaida");

                    b.ToTable("ItemSaida", (string)null);
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Loja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("IdCidade")
                        .HasColumnType("int");

                    b.Property<string>("Inscricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("char(14)");

                    b.HasKey("Id");

                    b.HasIndex("IdCidade");

                    b.ToTable("Loja", (string)null);
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<bool>("Controlado")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("numeric(38,2)");

                    b.Property<int>("QuantMinima")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Saida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Frete")
                        .HasColumnType("numeric(38,2)");

                    b.Property<int>("IdLoja")
                        .HasColumnType("int");

                    b.Property<int>("IdTransportadora")
                        .HasColumnType("int");

                    b.Property<decimal>("Imposto")
                        .HasColumnType("numeric(38,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(38,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdLoja");

                    b.HasIndex("IdTransportadora");

                    b.ToTable("Saida", (string)null);
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Transportadora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("char(14)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCidade")
                        .HasColumnType("int");

                    b.Property<string>("Inscricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("char(14)");

                    b.HasKey("Id");

                    b.HasIndex("IdCidade");

                    b.ToTable("Transportadora", (string)null);
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Entrada", b =>
                {
                    b.HasOne("Estoque.Domain.Entities.Fornecedor", null)
                        .WithMany("Entradas")
                        .HasForeignKey("FornecedorId");

                    b.HasOne("Estoque.Domain.Entities.Transportadora", "Transportadora")
                        .WithMany("Entradas")
                        .HasForeignKey("IdTransportadora")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Transportadora");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Fornecedor", b =>
                {
                    b.HasOne("Estoque.Domain.Entities.Cidade", "Cidade")
                        .WithMany("Fornecedores")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.ItemEntrada", b =>
                {
                    b.HasOne("Estoque.Domain.Entities.Entrada", "Entrada")
                        .WithMany("ItemEntradas")
                        .HasForeignKey("IdEntrada")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Estoque.Domain.Entities.Produto", "Produto")
                        .WithMany("ItemEntradas")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Entrada");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.ItemSaida", b =>
                {
                    b.HasOne("Estoque.Domain.Entities.Produto", "Produto")
                        .WithMany("ItemSaidas")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Estoque.Domain.Entities.Saida", "Saida")
                        .WithMany("ItemSaidas")
                        .HasForeignKey("IdSaida")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Saida");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Loja", b =>
                {
                    b.HasOne("Estoque.Domain.Entities.Cidade", "Cidade")
                        .WithMany("Lojas")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Produto", b =>
                {
                    b.HasOne("Estoque.Domain.Entities.Categoria", null)
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId");

                    b.HasOne("Estoque.Domain.Entities.Fornecedor", null)
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Saida", b =>
                {
                    b.HasOne("Estoque.Domain.Entities.Loja", "Loja")
                        .WithMany("Saidas")
                        .HasForeignKey("IdLoja")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Estoque.Domain.Entities.Transportadora", "Transportadora")
                        .WithMany("Saidas")
                        .HasForeignKey("IdTransportadora")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Loja");

                    b.Navigation("Transportadora");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Transportadora", b =>
                {
                    b.HasOne("Estoque.Domain.Entities.Cidade", "Cidade")
                        .WithMany("Transportadoras")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Cidade", b =>
                {
                    b.Navigation("Fornecedores");

                    b.Navigation("Lojas");

                    b.Navigation("Transportadoras");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Entrada", b =>
                {
                    b.Navigation("ItemEntradas");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Fornecedor", b =>
                {
                    b.Navigation("Entradas");

                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Loja", b =>
                {
                    b.Navigation("Saidas");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Produto", b =>
                {
                    b.Navigation("ItemEntradas");

                    b.Navigation("ItemSaidas");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Saida", b =>
                {
                    b.Navigation("ItemSaidas");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Transportadora", b =>
                {
                    b.Navigation("Entradas");

                    b.Navigation("Saidas");
                });
#pragma warning restore 612, 618
        }
    }
}
