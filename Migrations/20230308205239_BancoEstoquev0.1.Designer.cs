// <auto-generated />
using System;
using ApiEstoque.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiEstoque.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230308205239_BancoEstoquev0.1")]
    partial class BancoEstoquev01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiEstoque.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("ApiEstoque.Models.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("char(14)");

                    b.HasKey("Id");

                    b.ToTable("Cidade", (string)null);
                });

            modelBuilder.Entity("ApiEstoque.Models.Entrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Frete")
                        .HasColumnType("numeric(38,2)");

                    b.Property<decimal>("Imposto")
                        .HasColumnType("numeric(38,2)");

                    b.Property<int>("NumeroNotaFiscal")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(38,2)");

                    b.Property<int>("TransportadoraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("TransportadoraId");

                    b.ToTable("Entrada", (string)null);
                });

            modelBuilder.Entity("ApiEstoque.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("char(9)");

                    b.Property<int>("CidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("char(18)");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Inscricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("Fornecedor", (string)null);
                });

            modelBuilder.Entity("ApiEstoque.Models.ItemEntrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EntradaId")
                        .HasColumnType("int");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric(38,2)");

                    b.HasKey("Id");

                    b.HasIndex("EntradaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItemEntrada", (string)null);
                });

            modelBuilder.Entity("ApiEstoque.Models.ItemSaida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("SaidaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric(38,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("SaidaId");

                    b.ToTable("ItemSaida", (string)null);
                });

            modelBuilder.Entity("ApiEstoque.Models.Loja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Inscricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("char(14)");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("Loja", (string)null);
                });

            modelBuilder.Entity("ApiEstoque.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<bool>("Controlado")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Peso")
                        .HasColumnType("numeric(38,2)");

                    b.Property<int>("QuantMinima")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("ApiEstoque.Models.Saida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Frete")
                        .HasColumnType("numeric(38,2)");

                    b.Property<decimal>("Imposto")
                        .HasColumnType("numeric(38,2)");

                    b.Property<int>("LojaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(38,2)");

                    b.Property<int>("TransportadoraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LojaId");

                    b.HasIndex("TransportadoraId");

                    b.ToTable("Saida", (string)null);
                });

            modelBuilder.Entity("ApiEstoque.Models.Transportadora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("char(14)");

                    b.Property<int>("CidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inscricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("char(14)");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("Transportadora", (string)null);
                });

            modelBuilder.Entity("ApiEstoque.Models.Entrada", b =>
                {
                    b.HasOne("ApiEstoque.Models.Fornecedor", null)
                        .WithMany("Entrada")
                        .HasForeignKey("FornecedorId");

                    b.HasOne("ApiEstoque.Models.Transportadora", "Transportadora")
                        .WithMany("Entrada")
                        .HasForeignKey("TransportadoraId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Transportadora");
                });

            modelBuilder.Entity("ApiEstoque.Models.Fornecedor", b =>
                {
                    b.HasOne("ApiEstoque.Models.Cidade", "Cidade")
                        .WithMany("Fornecedor")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("ApiEstoque.Models.ItemEntrada", b =>
                {
                    b.HasOne("ApiEstoque.Models.Entrada", "Entrada")
                        .WithMany("ItemEntrada")
                        .HasForeignKey("EntradaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiEstoque.Models.Produto", "Produto")
                        .WithMany("ItemEntrada")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entrada");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ApiEstoque.Models.ItemSaida", b =>
                {
                    b.HasOne("ApiEstoque.Models.Produto", "Produto")
                        .WithMany("ItemSaida")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiEstoque.Models.Saida", "Saida")
                        .WithMany("ItemSaida")
                        .HasForeignKey("SaidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Saida");
                });

            modelBuilder.Entity("ApiEstoque.Models.Loja", b =>
                {
                    b.HasOne("ApiEstoque.Models.Cidade", "Cidade")
                        .WithMany("Loja")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("ApiEstoque.Models.Produto", b =>
                {
                    b.HasOne("ApiEstoque.Models.Categoria", null)
                        .WithMany("Produto")
                        .HasForeignKey("CategoriaId");

                    b.HasOne("ApiEstoque.Models.Fornecedor", null)
                        .WithMany("Produto")
                        .HasForeignKey("FornecedorId");
                });

            modelBuilder.Entity("ApiEstoque.Models.Saida", b =>
                {
                    b.HasOne("ApiEstoque.Models.Loja", "Loja")
                        .WithMany("Saida")
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiEstoque.Models.Transportadora", "Transportadora")
                        .WithMany("Saida")
                        .HasForeignKey("TransportadoraId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Loja");

                    b.Navigation("Transportadora");
                });

            modelBuilder.Entity("ApiEstoque.Models.Transportadora", b =>
                {
                    b.HasOne("ApiEstoque.Models.Cidade", "Cidade")
                        .WithMany("Transportadora")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("ApiEstoque.Models.Categoria", b =>
                {
                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ApiEstoque.Models.Cidade", b =>
                {
                    b.Navigation("Fornecedor");

                    b.Navigation("Loja");

                    b.Navigation("Transportadora");
                });

            modelBuilder.Entity("ApiEstoque.Models.Entrada", b =>
                {
                    b.Navigation("ItemEntrada");
                });

            modelBuilder.Entity("ApiEstoque.Models.Fornecedor", b =>
                {
                    b.Navigation("Entrada");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ApiEstoque.Models.Loja", b =>
                {
                    b.Navigation("Saida");
                });

            modelBuilder.Entity("ApiEstoque.Models.Produto", b =>
                {
                    b.Navigation("ItemEntrada");

                    b.Navigation("ItemSaida");
                });

            modelBuilder.Entity("ApiEstoque.Models.Saida", b =>
                {
                    b.Navigation("ItemSaida");
                });

            modelBuilder.Entity("ApiEstoque.Models.Transportadora", b =>
                {
                    b.Navigation("Entrada");

                    b.Navigation("Saida");
                });
#pragma warning restore 612, 618
        }
    }
}
